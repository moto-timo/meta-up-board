From 2f627e43ddb45b072336fa497d06ebc6931ad310 Mon Sep 17 00:00:00 2001
From: frank2_hsieh <frank2_hsieh@asus.com>
Date: Tue, 8 Sep 2020 14:25:03 +0800
Subject: [PATCH 21/30] ASoC: Intel: bytcht_pcm512x: use modern dai_link style

Refer the following commit.
ASoC: Intel: bytcht_cx2072x: use modern dai_link style
---
 sound/soc/intel/boards/bytcht_pcm512x.c | 47 +++++++++++++++----------
 1 file changed, 29 insertions(+), 18 deletions(-)

diff --git a/sound/soc/intel/boards/bytcht_pcm512x.c b/sound/soc/intel/boards/bytcht_pcm512x.c
index b2a71b27da9d..c25ad0982a15 100644
--- a/sound/soc/intel/boards/bytcht_pcm512x.c
+++ b/sound/soc/intel/boards/bytcht_pcm512x.c
@@ -95,47 +95,56 @@ static const struct snd_soc_ops aif1_ops = {
 	.startup = aif1_startup,
 };
 
+SND_SOC_DAILINK_DEF(dummy,
+       DAILINK_COMP_ARRAY(COMP_DUMMY()));
+
+SND_SOC_DAILINK_DEF(media,
+       DAILINK_COMP_ARRAY(COMP_CPU("media-cpu-dai")));
+
+SND_SOC_DAILINK_DEF(deepbuffer,
+       DAILINK_COMP_ARRAY(COMP_CPU("deepbuffer-cpu-dai")));
+
+SND_SOC_DAILINK_DEF(ssp2,
+       DAILINK_COMP_ARRAY(COMP_CPU("ssp2-port")));
+
+SND_SOC_DAILINK_DEF(pcm512x,
+       DAILINK_COMP_ARRAY(COMP_CODEC("i2c-10EC512x:00", "pcm512x-hifi")));
+
+SND_SOC_DAILINK_DEF(platform,
+       DAILINK_COMP_ARRAY(COMP_PLATFORM("sst-mfld-platform")));
+
 static struct snd_soc_dai_link dailink[] = {
 	[MERR_DPCM_AUDIO] = {
 		.name = "Audio Port",
 		.stream_name = "Audio",
-		.cpu_dai_name = "media-cpu-dai",
-		.codec_dai_name = "snd-soc-dummy-dai",
-		.codec_name = "snd-soc-dummy",
-		.platform_name = "sst-mfld-platform",
 		.nonatomic = true,
 		.dynamic = 1,
 		.dpcm_playback = 1,
 		.dpcm_capture = 1,
 		.ops = &aif1_ops,
+		SND_SOC_DAILINK_REG(media, dummy, platform),
 	},
 	[MERR_DPCM_DEEP_BUFFER] = {
 		.name = "Deep-Buffer Audio Port",
 		.stream_name = "Deep-Buffer Audio",
-		.cpu_dai_name = "deepbuffer-cpu-dai",
-		.codec_dai_name = "snd-soc-dummy-dai",
-		.codec_name = "snd-soc-dummy",
-		.platform_name = "sst-mfld-platform",
 		.nonatomic = true,
 		.dynamic = 1,
 		.dpcm_playback = 1,
 		.ops = &aif1_ops,
+		SND_SOC_DAILINK_REG(deepbuffer, dummy, platform),
 	},
 	/* CODEC<->CODEC link */
 	/* back ends */
 	{
 		.name = "SSP2-Codec",
 		.id = 0,
-		.cpu_dai_name = "ssp2-port",
-		.platform_name = "sst-mfld-platform",
 		.no_pcm = 1,
-		.codec_dai_name = "pcm512x-hifi",
-		.codec_name = "i2c-10EC512x:00",
 		.dai_fmt = SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF
 						| SND_SOC_DAIFMT_CBS_CFS,
 		.be_hw_params_fixup = codec_fixup,
 		.nonatomic = true,
 		.dpcm_playback = 1,
+		SND_SOC_DAILINK_REG(ssp2, pcm512x, platform),
 	},
 };
 
@@ -161,7 +170,8 @@ static int bytcht_pcm512x_probe(struct platform_device *pdev)
 	int i;
 	struct snd_soc_card *card;
 	struct snd_soc_acpi_mach *mach;
-	const char *i2c_name = NULL;
+	//const char *i2c_name = NULL;
+	struct acpi_device *adev;
 	int dai_index = 0;
 
 	mach = (&pdev->dev)->platform_data;
@@ -170,18 +180,19 @@ static int bytcht_pcm512x_probe(struct platform_device *pdev)
 
 	/* fix index of codec dai */
 	for (i = 0; i < ARRAY_SIZE(dailink); i++) {
-		if (!strcmp(dailink[i].codec_name, "i2c-104C512x:00")) {
+		if (!strcmp(dailink[i].codecs->name, "i2c-104C512x:00")) {
 			dai_index = i;
 			break;
 		}
 	}
 
 	/* fixup codec name based on HID */
-	i2c_name = acpi_dev_get_first_match_name(mach->id, NULL, -1);
-	if (i2c_name != NULL) {
+	adev = acpi_dev_get_first_match_dev(mach->id, NULL, -1);
+	if (adev != NULL) {
 		snprintf(codec_name, sizeof(codec_name),
-			"%s%s", "i2c-", i2c_name);
-		dailink[dai_index].codec_name = codec_name;
+			"%s%s", "i2c-", acpi_dev_name(adev));
+		put_device(&adev->dev);
+		dailink[dai_index].codecs->name = codec_name;
 	}
 
 	ret_val = devm_snd_soc_register_card(&pdev->dev, card);
-- 
2.17.1

