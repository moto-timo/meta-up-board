From 78530c0f42e47173b4a75a4895182e1ae9712f56 Mon Sep 17 00:00:00 2001
From: frank2_hsieh <frank2_hsieh@asus.com>
Date: Tue, 8 Sep 2020 18:24:48 +0800
Subject: [PATCH 28/30] pinctrl-core: no need to check mux usage on upboard

the following patch added the function to check pin mux usage.
UP board only configuration pin mux on BIOS so it skip the function.

pinctrl/gpio: Take MUX usage into account
---
 drivers/gpio/gpiolib.c |  3 +--
 drivers/pinctrl/core.c | 28 ----------------------------
 2 files changed, 1 insertion(+), 30 deletions(-)

diff --git a/drivers/gpio/gpiolib.c b/drivers/gpio/gpiolib.c
index 9003642a42af..341d4df80583 100644
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@ -1101,8 +1101,7 @@ static long gpio_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 		    test_bit(FLAG_IS_HOGGED, &desc->flags) ||
 		    test_bit(FLAG_USED_AS_IRQ, &desc->flags) ||
 		    test_bit(FLAG_EXPORT, &desc->flags) ||
-		    test_bit(FLAG_SYSFS, &desc->flags) ||
-		    !pinctrl_gpio_can_use_line(chip->base + lineinfo.line_offset))
+		    test_bit(FLAG_SYSFS, &desc->flags))
 			lineinfo.flags |= GPIOLINE_FLAG_KERNEL;
 		if (test_bit(FLAG_IS_OUT, &desc->flags))
 			lineinfo.flags |= GPIOLINE_FLAG_IS_OUT;
diff --git a/drivers/pinctrl/core.c b/drivers/pinctrl/core.c
index 3b1f376c80ec..b481493b2a2f 100755
--- a/drivers/pinctrl/core.c
+++ b/drivers/pinctrl/core.c
@@ -786,34 +786,6 @@ int pinctrl_get_group_selector(struct pinctrl_dev *pctldev,
 	return -EINVAL;
 }
 
-bool pinctrl_gpio_can_use_line(unsigned gpio)
-{
-	struct pinctrl_dev *pctldev;
-	struct pinctrl_gpio_range *range;
-	bool result;
-	int pin;
-
-	/*
-	 * Try to obtain GPIO range, if it fails
-	 * we're probably dealing with GPIO driver
-	 * without a backing pin controller - bail out.
-	 */
-	if (pinctrl_get_device_gpio_range(gpio, &pctldev, &range))
-		return true;
-
-	mutex_lock(&pctldev->mutex);
-
-	/* Convert to the pin controllers number space */
-	pin = gpio_to_pin(range, gpio);
-
-	result = pinmux_can_be_used_for_gpio(pctldev, pin);
-
-	mutex_unlock(&pctldev->mutex);
-
-	return result;
-}
-EXPORT_SYMBOL_GPL(pinctrl_gpio_can_use_line);
-
 /**
  * pinctrl_gpio_request() - request a single pin to be used as GPIO
  * @gpio: the GPIO pin number from the GPIO subsystem number space
-- 
2.17.1

