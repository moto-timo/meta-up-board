From 550f0a38bbbfbb54f033e685c64883bb968850de Mon Sep 17 00:00:00 2001
From: AaeonCM <aaeon_cm@aaeon.com>
Date: Fri, 6 Aug 2021 14:01:10 +0800
Subject: [PATCH] Add the missing GPIO community2

---
 drivers/pinctrl/intel/pinctrl-elkhartlake.c | 315 +++++++++++++++-------------
 1 file changed, 167 insertions(+), 148 deletions(-)

diff --git a/drivers/pinctrl/intel/pinctrl-elkhartlake.c b/drivers/pinctrl/intel/pinctrl-elkhartlake.c
index a973b93..bc487b5 100644
--- a/drivers/pinctrl/intel/pinctrl-elkhartlake.c
+++ b/drivers/pinctrl/intel/pinctrl-elkhartlake.c
@@ -234,150 +234,168 @@ static const struct pinctrl_pin_desc ehl_pins[] = {
 	PINCTRL_PIN(177, "vI2S2_TXD"),
 	PINCTRL_PIN(178, "vI2S2_RXD"),
 	PINCTRL_PIN(179, "vSD3_CD_B"),
+        /* GPD */
+	PINCTRL_PIN(180, "GPD_0"),
+	PINCTRL_PIN(181, "GPD_1"),
+	PINCTRL_PIN(182, "GPD_2"),
+	PINCTRL_PIN(183, "GPD_3"),
+	PINCTRL_PIN(184, "GPD_4"),
+	PINCTRL_PIN(185, "GPD_5"),
+	PINCTRL_PIN(186, "GPD_6"),
+	PINCTRL_PIN(187, "GPD_7"),
+	PINCTRL_PIN(188, "GPD_8"),
+	PINCTRL_PIN(189, "GPD_9"),
+	PINCTRL_PIN(190, "GPD_10"),
+	PINCTRL_PIN(191, "GPD_11"),
+	PINCTRL_PIN(192, "INPUT3VSEL"),
+	PINCTRL_PIN(193, "SLP_LANB"),
+	PINCTRL_PIN(194, "SLP_SUSB"),
+	PINCTRL_PIN(195, "SLP_WAKEB"),
+	PINCTRL_PIN(196, "DRAM_RESETB"),
 	/* CPU */
-	PINCTRL_PIN(180, "HDACPU_SDI"),
-	PINCTRL_PIN(181, "HDACPU_SDO"),
-	PINCTRL_PIN(182, "HDACPU_BCLK"),
-	PINCTRL_PIN(183, "PM_SYNC"),
-	PINCTRL_PIN(184, "PECI"),
-	PINCTRL_PIN(185, "CPUPWRGD"),
-	PINCTRL_PIN(186, "THRMTRIPB"),
-	PINCTRL_PIN(187, "PLTRST_CPUB"),
-	PINCTRL_PIN(188, "PM_DOWN"),
-	PINCTRL_PIN(189, "TRIGGER_IN"),
-	PINCTRL_PIN(190, "TRIGGER_OUT"),
-	PINCTRL_PIN(191, "UFS_RESETB"),
-	PINCTRL_PIN(192, "CLKOUT_CPURTC"),
-	PINCTRL_PIN(193, "VCCST_OVERRIDE"),
-	PINCTRL_PIN(194, "C10_WAKE"),
-	PINCTRL_PIN(195, "PROCHOTB"),
-	PINCTRL_PIN(196, "CATERRB"),
+	PINCTRL_PIN(197, "HDACPU_SDI"),
+	PINCTRL_PIN(198, "HDACPU_SDO"),
+	PINCTRL_PIN(199, "HDACPU_BCLK"),
+	PINCTRL_PIN(200, "PM_SYNC"),
+	PINCTRL_PIN(201, "PECI"),
+	PINCTRL_PIN(202, "CPUPWRGD"),
+	PINCTRL_PIN(203, "THRMTRIPB"),
+	PINCTRL_PIN(204, "PLTRST_CPUB"),
+	PINCTRL_PIN(205, "PM_DOWN"),
+	PINCTRL_PIN(206, "TRIGGER_IN"),
+	PINCTRL_PIN(207, "TRIGGER_OUT"),
+	PINCTRL_PIN(208, "UFS_RESETB"),
+	PINCTRL_PIN(209, "CLKOUT_CPURTC"),
+	PINCTRL_PIN(210, "VCCST_OVERRIDE"),
+	PINCTRL_PIN(211, "C10_WAKE"),
+	PINCTRL_PIN(212, "PROCHOTB"),
+	PINCTRL_PIN(213, "CATERRB"),
 	/* GPP_S */
-	PINCTRL_PIN(197, "UFS_REF_CLK_0"),
-	PINCTRL_PIN(198, "UFS_REF_CLK_1"),
+	PINCTRL_PIN(214, "UFS_REF_CLK_0"),
+	PINCTRL_PIN(215, "UFS_REF_CLK_1"),
 	/* GPP_A */
-	PINCTRL_PIN(199, "RGMII0_TXDATA_3"),
-	PINCTRL_PIN(200, "RGMII0_TXDATA_2"),
-	PINCTRL_PIN(201, "RGMII0_TXDATA_1"),
-	PINCTRL_PIN(202, "RGMII0_TXDATA_0"),
-	PINCTRL_PIN(203, "RGMII0_TXCLK"),
-	PINCTRL_PIN(204, "RGMII0_TXCTL"),
-	PINCTRL_PIN(205, "RGMII0_RXCLK"),
-	PINCTRL_PIN(206, "RGMII0_RXDATA_3"),
-	PINCTRL_PIN(207, "RGMII0_RXDATA_2"),
-	PINCTRL_PIN(208, "RGMII0_RXDATA_1"),
-	PINCTRL_PIN(209, "RGMII0_RXDATA_0"),
-	PINCTRL_PIN(210, "RGMII1_TXDATA_3"),
-	PINCTRL_PIN(211, "RGMII1_TXDATA_2"),
-	PINCTRL_PIN(212, "RGMII1_TXDATA_1"),
-	PINCTRL_PIN(213, "RGMII1_TXDATA_0"),
-	PINCTRL_PIN(214, "RGMII1_TXCLK"),
-	PINCTRL_PIN(215, "RGMII1_TXCTL"),
-	PINCTRL_PIN(216, "RGMII1_RXCLK"),
-	PINCTRL_PIN(217, "RGMII1_RXCTL"),
-	PINCTRL_PIN(218, "RGMII1_RXDATA_3"),
-	PINCTRL_PIN(219, "RGMII1_RXDATA_2"),
-	PINCTRL_PIN(220, "RGMII1_RXDATA_1"),
-	PINCTRL_PIN(221, "RGMII1_RXDATA_0"),
-	PINCTRL_PIN(222, "RGMII0_RXCTL"),
+	PINCTRL_PIN(216, "RGMII0_TXDATA_3"),
+	PINCTRL_PIN(217, "RGMII0_TXDATA_2"),
+	PINCTRL_PIN(218, "RGMII0_TXDATA_1"),
+	PINCTRL_PIN(219, "RGMII0_TXDATA_0"),
+	PINCTRL_PIN(220, "RGMII0_TXCLK"),
+	PINCTRL_PIN(221, "RGMII0_TXCTL"),
+	PINCTRL_PIN(222, "RGMII0_RXCLK"),
+	PINCTRL_PIN(223, "RGMII0_RXDATA_3"),
+	PINCTRL_PIN(224, "RGMII0_RXDATA_2"),
+	PINCTRL_PIN(225, "RGMII0_RXDATA_1"),
+	PINCTRL_PIN(226, "RGMII0_RXDATA_0"),
+	PINCTRL_PIN(227, "RGMII1_TXDATA_3"),
+	PINCTRL_PIN(228, "RGMII1_TXDATA_2"),
+	PINCTRL_PIN(229, "RGMII1_TXDATA_1"),
+	PINCTRL_PIN(230, "RGMII1_TXDATA_0"),
+	PINCTRL_PIN(231, "RGMII1_TXCLK"),
+	PINCTRL_PIN(232, "RGMII1_TXCTL"),
+	PINCTRL_PIN(233, "RGMII1_RXCLK"),
+	PINCTRL_PIN(234, "RGMII1_RXCTL"),
+	PINCTRL_PIN(235, "RGMII1_RXDATA_3"),
+	PINCTRL_PIN(236, "RGMII1_RXDATA_2"),
+	PINCTRL_PIN(237, "RGMII1_RXDATA_1"),
+	PINCTRL_PIN(238, "RGMII1_RXDATA_0"),
+	PINCTRL_PIN(239, "RGMII0_RXCTL"),
 	/* vGPIO_3 */
-	PINCTRL_PIN(223, "ESPI_USB_OCB_0"),
-	PINCTRL_PIN(224, "ESPI_USB_OCB_1"),
-	PINCTRL_PIN(225, "ESPI_USB_OCB_2"),
-	PINCTRL_PIN(226, "ESPI_USB_OCB_3"),
+	PINCTRL_PIN(240, "ESPI_USB_OCB_0"),
+	PINCTRL_PIN(241, "ESPI_USB_OCB_1"),
+	PINCTRL_PIN(242, "ESPI_USB_OCB_2"),
+	PINCTRL_PIN(243, "ESPI_USB_OCB_3"),
 	/* GPP_C */
-	PINCTRL_PIN(227, "SMBCLK"),
-	PINCTRL_PIN(228, "SMBDATA"),
-	PINCTRL_PIN(229, "OSE_PWM0"),
-	PINCTRL_PIN(230, "RGMII0_MDC"),
-	PINCTRL_PIN(231, "RGMII0_MDIO"),
-	PINCTRL_PIN(232, "OSE_PWM1"),
-	PINCTRL_PIN(233, "RGMII1_MDC"),
-	PINCTRL_PIN(234, "RGMII1_MDIO"),
-	PINCTRL_PIN(235, "OSE_TGPIO4"),
-	PINCTRL_PIN(236, "OSE_HSUART0_EN"),
-	PINCTRL_PIN(237, "OSE_TGPIO5"),
-	PINCTRL_PIN(238, "OSE_HSUART0_RE"),
-	PINCTRL_PIN(239, "OSE_UART0_RXD"),
-	PINCTRL_PIN(240, "OSE_UART0_TXD"),
-	PINCTRL_PIN(241, "OSE_UART0_RTSB"),
-	PINCTRL_PIN(242, "OSE_UART0_CTSB"),
-	PINCTRL_PIN(243, "RGMII2_MDIO"),
-	PINCTRL_PIN(244, "RGMII2_MDC"),
-	PINCTRL_PIN(245, "OSE_I2C4_SDAT"),
-	PINCTRL_PIN(246, "OSE_I2C4_SCLK"),
-	PINCTRL_PIN(247, "OSE_UART4_RXD"),
-	PINCTRL_PIN(248, "OSE_UART4_TXD"),
-	PINCTRL_PIN(249, "OSE_UART4_RTSB"),
-	PINCTRL_PIN(250, "OSE_UART4_CTSB"),
+	PINCTRL_PIN(244, "SMBCLK"),
+	PINCTRL_PIN(245, "SMBDATA"),
+	PINCTRL_PIN(246, "OSE_PWM0"),
+	PINCTRL_PIN(247, "RGMII0_MDC"),
+	PINCTRL_PIN(248, "RGMII0_MDIO"),
+	PINCTRL_PIN(249, "OSE_PWM1"),
+	PINCTRL_PIN(250, "RGMII1_MDC"),
+	PINCTRL_PIN(251, "RGMII1_MDIO"),
+	PINCTRL_PIN(252, "OSE_TGPIO4"),
+	PINCTRL_PIN(253, "OSE_HSUART0_EN"),
+	PINCTRL_PIN(254, "OSE_TGPIO5"),
+	PINCTRL_PIN(255, "OSE_HSUART0_RE"),
+	PINCTRL_PIN(256, "OSE_UART0_RXD"),
+	PINCTRL_PIN(257, "OSE_UART0_TXD"),
+	PINCTRL_PIN(258, "OSE_UART0_RTSB"),
+	PINCTRL_PIN(259, "OSE_UART0_CTSB"),
+	PINCTRL_PIN(260, "RGMII2_MDIO"),
+	PINCTRL_PIN(261, "RGMII2_MDC"),
+	PINCTRL_PIN(262, "OSE_I2C4_SDAT"),
+	PINCTRL_PIN(263, "OSE_I2C4_SCLK"),
+	PINCTRL_PIN(264, "OSE_UART4_RXD"),
+	PINCTRL_PIN(265, "OSE_UART4_TXD"),
+	PINCTRL_PIN(266, "OSE_UART4_RTSB"),
+	PINCTRL_PIN(267, "OSE_UART4_CTSB"),
 	/* GPP_F */
-	PINCTRL_PIN(251, "CNV_BRI_DT"),
-	PINCTRL_PIN(252, "CNV_BRI_RSP"),
-	PINCTRL_PIN(253, "CNV_RGI_DT"),
-	PINCTRL_PIN(254, "CNV_RGI_RSP"),
-	PINCTRL_PIN(255, "CNV_RF_RESET_B"),
-	PINCTRL_PIN(256, "EMMC_HIP_MON"),
-	PINCTRL_PIN(257, "CNV_PA_BLANKING"),
-	PINCTRL_PIN(258, "OSE_I2S1_SCLK"),
-	PINCTRL_PIN(259, "I2S_MCLK2_INOUT"),
-	PINCTRL_PIN(260, "BOOTMPC"),
-	PINCTRL_PIN(261, "OSE_I2S1_SFRM"),
-	PINCTRL_PIN(262, "GPPC_F_11"),
-	PINCTRL_PIN(263, "GSXDOUT"),
-	PINCTRL_PIN(264, "GSXSLOAD"),
-	PINCTRL_PIN(265, "GSXDIN"),
-	PINCTRL_PIN(266, "GSXSRESETB"),
-	PINCTRL_PIN(267, "GSXCLK"),
-	PINCTRL_PIN(268, "GPPC_F_17"),
-	PINCTRL_PIN(269, "OSE_I2S1_TXD"),
-	PINCTRL_PIN(270, "OSE_I2S1_RXD"),
-	PINCTRL_PIN(271, "EXT_PWR_GATEB"),
-	PINCTRL_PIN(272, "EXT_PWR_GATE2B"),
-	PINCTRL_PIN(273, "VNN_CTRL"),
-	PINCTRL_PIN(274, "V1P05_CTRL"),
-	PINCTRL_PIN(275, "GPPF_CLK_LOOPBACK"),
+	PINCTRL_PIN(268, "CNV_BRI_DT"),
+	PINCTRL_PIN(269, "CNV_BRI_RSP"),
+	PINCTRL_PIN(270, "CNV_RGI_DT"),
+	PINCTRL_PIN(271, "CNV_RGI_RSP"),
+	PINCTRL_PIN(272, "CNV_RF_RESET_B"),
+	PINCTRL_PIN(273, "EMMC_HIP_MON"),
+	PINCTRL_PIN(274, "CNV_PA_BLANKING"),
+	PINCTRL_PIN(275, "OSE_I2S1_SCLK"),
+	PINCTRL_PIN(276, "I2S_MCLK2_INOUT"),
+	PINCTRL_PIN(277, "BOOTMPC"),
+	PINCTRL_PIN(278, "OSE_I2S1_SFRM"),
+	PINCTRL_PIN(279, "GPPC_F_11"),
+	PINCTRL_PIN(280, "GSXDOUT"),
+	PINCTRL_PIN(281, "GSXSLOAD"),
+	PINCTRL_PIN(282, "GSXDIN"),
+	PINCTRL_PIN(283, "GSXSRESETB"),
+	PINCTRL_PIN(284, "GSXCLK"),
+	PINCTRL_PIN(285, "GPPC_F_17"),
+	PINCTRL_PIN(286, "OSE_I2S1_TXD"),
+	PINCTRL_PIN(287, "OSE_I2S1_RXD"),
+	PINCTRL_PIN(288, "EXT_PWR_GATEB"),
+	PINCTRL_PIN(289, "EXT_PWR_GATE2B"),
+	PINCTRL_PIN(290, "VNN_CTRL"),
+	PINCTRL_PIN(291, "V1P05_CTRL"),
+	PINCTRL_PIN(292, "GPPF_CLK_LOOPBACK"),
 	/* HVCMOS */
-	PINCTRL_PIN(276, "L_BKLTEN"),
-	PINCTRL_PIN(277, "L_BKLTCTL"),
-	PINCTRL_PIN(278, "L_VDDEN"),
-	PINCTRL_PIN(279, "SYS_PWROK"),
-	PINCTRL_PIN(280, "SYS_RESETB"),
-	PINCTRL_PIN(281, "MLK_RSTB"),
+	PINCTRL_PIN(293, "L_BKLTEN"),
+	PINCTRL_PIN(294, "L_BKLTCTL"),
+	PINCTRL_PIN(295, "L_VDDEN"),
+	PINCTRL_PIN(296, "SYS_PWROK"),
+	PINCTRL_PIN(297, "SYS_RESETB"),
+	PINCTRL_PIN(298, "MLK_RSTB"),
 	/* GPP_E */
-	PINCTRL_PIN(282, "SATA_LEDB"),
-	PINCTRL_PIN(283, "GPPC_E_1"),
-	PINCTRL_PIN(284, "GPPC_E_2"),
-	PINCTRL_PIN(285, "DDSP_HPD_B"),
-	PINCTRL_PIN(286, "SATA_DEVSLP_0"),
-	PINCTRL_PIN(287, "DDPB_CTRLDATA"),
-	PINCTRL_PIN(288, "GPPC_E_6"),
-	PINCTRL_PIN(289, "DDPB_CTRLCLK"),
-	PINCTRL_PIN(290, "GPPC_E_8"),
-	PINCTRL_PIN(291, "USB2_OCB_0"),
-	PINCTRL_PIN(292, "GPPC_E_10"),
-	PINCTRL_PIN(293, "GPPC_E_11"),
-	PINCTRL_PIN(294, "GPPC_E_12"),
-	PINCTRL_PIN(295, "GPPC_E_13"),
-	PINCTRL_PIN(296, "DDSP_HPD_A"),
-	PINCTRL_PIN(297, "OSE_I2S0_RXD"),
-	PINCTRL_PIN(298, "OSE_I2S0_TXD"),
-	PINCTRL_PIN(299, "DDSP_HPD_C"),
-	PINCTRL_PIN(300, "DDPA_CTRLDATA"),
-	PINCTRL_PIN(301, "DDPA_CTRLCLK"),
-	PINCTRL_PIN(302, "OSE_I2S0_SCLK"),
-	PINCTRL_PIN(303, "OSE_I2S0_SFRM"),
-	PINCTRL_PIN(304, "DDPC_CTRLDATA"),
-	PINCTRL_PIN(305, "DDPC_CTRLCLK"),
-	PINCTRL_PIN(306, "SPI1_CLK_LOOPBK"),
+	PINCTRL_PIN(299, "SATA_LEDB"),
+	PINCTRL_PIN(300, "GPPC_E_1"),
+	PINCTRL_PIN(301, "GPPC_E_2"),
+	PINCTRL_PIN(302, "DDSP_HPD_B"),
+	PINCTRL_PIN(303, "SATA_DEVSLP_0"),
+	PINCTRL_PIN(304, "DDPB_CTRLDATA"),
+	PINCTRL_PIN(305, "GPPC_E_6"),
+	PINCTRL_PIN(306, "DDPB_CTRLCLK"),
+	PINCTRL_PIN(307, "GPPC_E_8"),
+	PINCTRL_PIN(308, "USB2_OCB_0"),
+	PINCTRL_PIN(309, "GPPC_E_10"),
+	PINCTRL_PIN(310, "GPPC_E_11"),
+	PINCTRL_PIN(311, "GPPC_E_12"),
+	PINCTRL_PIN(312, "GPPC_E_13"),
+	PINCTRL_PIN(313, "DDSP_HPD_A"),
+	PINCTRL_PIN(314, "OSE_I2S0_RXD"),
+	PINCTRL_PIN(315, "OSE_I2S0_TXD"),
+	PINCTRL_PIN(316, "DDSP_HPD_C"),
+	PINCTRL_PIN(317, "DDPA_CTRLDATA"),
+	PINCTRL_PIN(318, "DDPA_CTRLCLK"),
+	PINCTRL_PIN(319, "OSE_I2S0_SCLK"),
+	PINCTRL_PIN(320, "OSE_I2S0_SFRM"),
+	PINCTRL_PIN(321, "DDPC_CTRLDATA"),
+	PINCTRL_PIN(322, "DDPC_CTRLCLK"),
+	PINCTRL_PIN(323, "SPI1_CLK_LOOPBK"),
 	/* GPP_R */
-	PINCTRL_PIN(307, "HDA_BCLK"),
-	PINCTRL_PIN(308, "HDA_SYNC"),
-	PINCTRL_PIN(309, "HDA_SDO"),
-	PINCTRL_PIN(310, "HDA_SDI_0"),
-	PINCTRL_PIN(311, "HDA_RSTB"),
-	PINCTRL_PIN(312, "HDA_SDI_1"),
-	PINCTRL_PIN(313, "GPP_R_6"),
-	PINCTRL_PIN(314, "GPP_R_7"),
+	PINCTRL_PIN(324, "HDA_BCLK"),
+	PINCTRL_PIN(325, "HDA_SYNC"),
+	PINCTRL_PIN(326, "HDA_SDO"),
+	PINCTRL_PIN(327, "HDA_SDI_0"),
+	PINCTRL_PIN(328, "HDA_RSTB"),
+	PINCTRL_PIN(329, "HDA_SDI_1"),
+	PINCTRL_PIN(330, "GPP_R_6"),
+	PINCTRL_PIN(331, "GPP_R_7"),
 };
 
 static const struct intel_padgroup ehl_community0_gpps[] = {
@@ -395,33 +413,34 @@ static const struct intel_padgroup ehl_community1_gpps[] = {
 };
 
 static const struct intel_padgroup ehl_community2_gpps[] = {
-	/* PLACE HOLDER */
+	EHL_GPP(0, 180, 196, INTEL_GPIO_BASE_NOMAP),	/* GPD */
 };
 
 static const struct intel_padgroup ehl_community3_gpps[] = {
-	EHL_GPP(0, 180, 196, INTEL_GPIO_BASE_NOMAP),	/* CPU */
-	EHL_GPP(1, 197, 198, 256),	/* GPP_S */
-	EHL_GPP(2, 199, 222, 288),	/* GPP_A */
-	EHL_GPP(3, 223, 226, 320),	/* vGPIO_3 */
+	EHL_GPP(0, 197, 213, INTEL_GPIO_BASE_NOMAP),	/* CPU */
+	EHL_GPP(1, 214, 215, 256),	/* GPP_S */
+	EHL_GPP(2, 216, 239, 288),	/* GPP_A */
+	EHL_GPP(3, 240, 243, 320),	/* vGPIO_3 */
 };
 
 static const struct intel_padgroup ehl_community4_gpps[] = {
-	EHL_GPP(0, 227, 250, 352),	/* GPP_C */
-	EHL_GPP(1, 251, 275, 384),	/* GPP_F */
-	EHL_GPP(2, 276, 281, INTEL_GPIO_BASE_NOMAP),	/* HVCMOS */
-	EHL_GPP(3, 282, 306, 416),	/* GPP_E */
+	EHL_GPP(0, 244, 267, 352),	/* GPP_C */
+	EHL_GPP(1, 268, 292, 384),	/* GPP_F */
+	EHL_GPP(2, 293, 298, INTEL_GPIO_BASE_NOMAP),	/* HVCMOS */
+	EHL_GPP(3, 299, 323, 416),	/* GPP_E */
 };
 
 static const struct intel_padgroup ehl_community5_gpps[] = {
-	EHL_GPP(0, 307, 314, 448),	/* GPP_R */
+	EHL_GPP(0, 324, 331, 448),	/* GPP_R */
 };
 
 static const struct intel_community ehl_communities[] = {
 	EHL_COMMUNITY(0, 0, 66, ehl_community0_gpps),
 	EHL_COMMUNITY(1, 67, 179, ehl_community1_gpps),
-	EHL_COMMUNITY(2, 180, 226, ehl_community3_gpps),
-	EHL_COMMUNITY(3, 227, 306, ehl_community4_gpps),
-	EHL_COMMUNITY(4, 307, 314, ehl_community5_gpps),
+       EHL_COMMUNITY(2, 180, 196, ehl_community2_gpps),
+	EHL_COMMUNITY(3, 197, 243, ehl_community3_gpps),
+	EHL_COMMUNITY(4, 244, 323, ehl_community4_gpps),
+	EHL_COMMUNITY(5, 324, 331, ehl_community5_gpps),
 };
 
 static const struct intel_pingroup ehl_groups[] = {
-- 
2.7.4

